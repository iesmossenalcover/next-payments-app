import { SelectorComponent } from "@/components/Selector";
import { getEventSummary } from "@/lib/apis/payments";
import { useApiRequest } from "@/lib/hooks/useApiRequest";
import { displayDateTime } from "@/lib/utils";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";

const EventSummaries = () => {
    const router = useRouter()
    const [selectedGroup, setSelectedGroup] = useState<number | undefined>(undefined)
    const { data, executeRequest } = useApiRequest(getEventSummary);

    const { id } = router.query

    useEffect(() => {
        if (!id) return;
        executeRequest(id as string)
    }, [id]);

    if (!data) return null;

    const events = () => {
        let events = data.events;

        if (selectedGroup) {
            events = events.filter(x => x.groupId === selectedGroup);
        }

        return events;
    }

    const displayEvents = events();
    const displayPaidEvents = displayEvents.filter(x => x.paid);
    const displayUnpaidEvents = displayEvents.filter(x => !x.paid);

    return (

        <>
            <Head>
                <title>Pagaments esdeveniment - {process.env.SCHOOL_NAME}</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className="container mx-auto p-10">
                <div>
                    <div className="flex flex-col gap-y-1">
                        <h4 className="font-bold">{data.name}</h4>
                        <p className="">Codi: <span className="font-bold">{data.code}</span></p>
                        <p className="">Inici pagament: <span className="font-bold">{displayDateTime(data.publishDate)}</span></p>
                        <p className="">Fi pagament: <span className="font-bold">{data.unpublishDate ? displayDateTime(data.unpublishDate) : "-"}</span></p>
                    </div>
                </div>
                <hr className="h-px mt-3 mb-8 bg-gray-300 border-0" />
                <div className="flex print:hidden">
                    <SelectorComponent
                        id='course'
                        name='course'
                        className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block p-2.5"
                        onSelect={val => setSelectedGroup(parseInt(val))}
                        selector={{ selected: `${selectedGroup}`, options: [{ key: "0", value: "Tots" }, ...data.groups] }} />

                    <button
                        onClick={() => window.print()}
                        className='
                            text-blue-700
                            hover:text-white
                            border
                            border-blue-700
                            hover:bg-blue-800
                            focus:outline-none
                            font-medium
                            rounded-lg
                            ml-5
                            text-sm px-2 py-1 text-center'>
                        Imprimir
                    </button>
                </div>

                <h3 className="mt-4 text-lg font-bold text-green-700">Pagat: {displayPaidEvents.length}</h3>
                <ul>
                    {
                        displayPaidEvents.map(x =>
                            <li key={x.id} className="mt-3 font-semibold">
                                {x.groupName} - {x.fullName} {x.quantity ? ` - x${x.quantity}` : null}
                            </li>
                        )
                    }
                </ul>

                <h3 className="mt-4 text-lg font-bold text-red-700">No Pagat: {displayUnpaidEvents.length}</h3>
                <ul>
                    {
                        displayUnpaidEvents.map(x =>
                            <li key={x.id} className="mt-3 font-semibol">
                                {x.groupName} - {x.fullName}
                            </li>
                        )
                    }
                </ul>
            </main>
        </>
    );
}

export default function EventSummaryPage() {



    return (
        <EventSummaries />
    )
};