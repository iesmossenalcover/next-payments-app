import { SuccessAlert } from "@/components/Alerts";
import { Group } from "@/lib/apis/payments/models";
import { useEffect, useState } from "react";
import { useRouter } from "next/router";
import { Container } from "@/components/layout/SideBar";
import Head from "next/head";
import { useApiRequest } from "@/lib/hooks/useApiRequest";
import { getGroupById, updateGroup } from "@/lib/apis/payments/client";
import GroupFields from "@/components/groups/GroupFields";

const Update = () => {
    const router = useRouter()
    const { id } = router.query

    const [showUpdated, setShowUpdated] = useState(false);
    const { data: group, isLoading: isGroupLoading, executeRequest: getGroupRequest } = useApiRequest(getGroupById);
    const { errors: updateErrors, isLoading: isUpdateLoading, executeRequest: updateGroupRequest } = useApiRequest(updateGroup);

    useEffect(() => {
        if (!id) return;
        getGroupRequest(parseInt(id as string))
    }, [id]);

    const onFormSubmit = async (e: React.SyntheticEvent<HTMLFormElement>) => {
        e.preventDefault();
        const form = e.currentTarget;
        const formData = new FormData(form);
        const g: Group = {
            id: parseInt(id as string),
            name: formData.get("name") as string,
            description: formData.get("description") as string,
        };

        const ok = await updateGroupRequest(g);
        if (ok) {
            setShowUpdated(true);
            setTimeout(() => setShowUpdated(false), 1500);
        }
    }





    const formDisabled = () => isUpdateLoading || isGroupLoading;

    if (!group) return null;

    return (
        <>
            <Head>
                <title>Editar grup - {process.env.SCHOOL_NAME}</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main>
                <div className="max-w-lg m-auto">
                    <div className="m-5">
                        {showUpdated ? <SuccessAlert text="Grup actualitzt correctament" /> : null}
                        <form className="mt-5" action="#" method="post" onSubmit={onFormSubmit} autoComplete="off">
                            <GroupFields
                                errors={updateErrors}
                                group={group} />

                            <div>
                                <input
                                    disabled={formDisabled()}
                                    className="w-full mt-6 bg-blue-500 hover:cursor-pointer hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline disabled:bg-slate-50 disabled:text-slate-500 disabled:border-slate-200 disabled:shadow-none disabled:hover:cursor-not-allowed"
                                    value="Guardar canvis"
                                    type="submit" />
                            </div>
                        </form>
                    </div>
                </div>
            </main>
        </>
    )
}

export default function UpdateGroupPage() {
    return (
        <Container>
            <Update />
        </Container>
    )
};